swagger: '2.0'
info:
  title: ToDo
  description: Documentation for project
  contact:
    email: admin@admin.local
  license:
    name: MIT License
  version: '0.1'
host: 127.0.0.1:8000
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /api-token-auth/:
    post:
      operationId: api-token-auth_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthToken'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AuthToken'
      tags:
        - api-token-auth
    parameters: []
  /api/projects/:
    get:
      operationId: api_projects_list
      description: ''
      parameters:
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectModel'
      tags:
        - api
    post:
      operationId: api_projects_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      tags:
        - api
    parameters: []
  /api/projects/{uid}/:
    get:
      operationId: api_projects_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectModel'
      tags:
        - api
    put:
      operationId: api_projects_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      tags:
        - api
    patch:
      operationId: api_projects_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ProjectModelSerializerBase'
      tags:
        - api
    delete:
      operationId: api_projects_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: uid
        in: path
        description: A UUID string identifying this project.
        required: true
        type: string
        format: uuid
  /api/todo/:
    get:
      operationId: api_todo_list
      description: ''
      parameters:
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ToDoModel'
      tags:
        - api
    post:
      operationId: api_todo_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDoModel'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ToDoModel'
      tags:
        - api
    parameters: []
  /api/todo/{uid}/:
    get:
      operationId: api_todo_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDoModel'
      tags:
        - api
    put:
      operationId: api_todo_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDoModel'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDoModel'
      tags:
        - api
    patch:
      operationId: api_todo_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDoModel'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDoModel'
      tags:
        - api
    delete:
      operationId: api_todo_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: uid
        in: path
        description: A UUID string identifying this to do.
        required: true
        type: string
        format: uuid
  /api/{version}/users/:
    get:
      operationId: api_users_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/UserModel'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
definitions:
  AuthToken:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        readOnly: true
        minLength: 1
  User:
    required:
      - user_name
    type: object
    properties:
      user_name:
        title: User name
        type: string
        maxLength: 64
        minLength: 1
  ProjectModel:
    required:
      - user_responsible
      - project_name
      - project_priority
    type: object
    properties:
      uid:
        title: Uid
        type: string
        format: uuid
      user_responsible:
        type: array
        items:
          $ref: '#/definitions/User'
        uniqueItems: true
      project_name:
        title: Project name
        type: string
        maxLength: 64
        minLength: 1
      project_priority:
        title: Project priority
        type: string
        maxLength: 64
        minLength: 1
      project_repo:
        title: Project repo
        type: string
        maxLength: 64
  ProjectModelSerializerBase:
    required:
      - project_name
      - project_priority
      - user_responsible
    type: object
    properties:
      uid:
        title: Uid
        type: string
        format: uuid
      project_name:
        title: Project name
        type: string
        maxLength: 64
        minLength: 1
      project_priority:
        title: Project priority
        type: string
        maxLength: 64
        minLength: 1
      project_repo:
        title: Project repo
        type: string
        maxLength: 64
      user_responsible:
        type: array
        items:
          type: string
          format: uuid
        uniqueItems: true
  ToDoModel:
    required:
      - users_responsible
      - task_text
      - task_id
    type: object
    properties:
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      users_responsible:
        type: array
        items:
          $ref: '#/definitions/User'
        uniqueItems: true
      task_text:
        title: Task text
        type: string
        maxLength: 1024
        minLength: 1
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      updated:
        title: Updated
        type: string
        format: date-time
        readOnly: true
      is_active:
        title: Is active
        type: boolean
      task_id:
        title: Task id
        type: string
        format: uri
  UserModel:
    required:
      - password
      - username
      - user_name
      - first_name
      - last_name
      - email
    type: object
    properties:
      uid:
        title: Uid
        type: string
        format: uuid
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
      last_login:
        title: Last login
        type: string
        format: date-time
        x-nullable: true
      is_superuser:
        title: Superuser status
        description: Designates that this user has all permissions without explicitly
          assigning them.
        type: boolean
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_staff:
        title: Staff status
        description: Designates whether the user can log into this admin site.
        type: boolean
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      date_joined:
        title: Date joined
        type: string
        format: date-time
      user_name:
        title: User name
        type: string
        maxLength: 64
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 64
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 64
        minLength: 1
      email:
        title: Email
        type: string
        maxLength: 64
        minLength: 1
      groups:
        description: The groups this user belongs to. A user will get all permissions
          granted to each of their groups.
        type: array
        items:
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
          type: integer
        uniqueItems: true
      user_permissions:
        description: Specific permissions for this user.
        type: array
        items:
          description: Specific permissions for this user.
          type: integer
        uniqueItems: true
